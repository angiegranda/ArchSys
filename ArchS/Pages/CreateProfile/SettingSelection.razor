@using ArchS.Data.AppServices 
<div class="profile-window" style="overflow: hidden;">

    <h5>Create Profile</h5>

    <div class="form-group">
        <label for="profileName">Profile Name:</label>
    <input id="profileName" @bind-value="profileName" @bind-value:event="oninput" type="text" placeholder="Introduce Profile Name Without Spaces"/>    </div>
    @if (!isValidName) {
        <p>Introduce a valid filename</p>
    }
    <div class="form-group checkbox-group">
        <input id="keepTrackFlag" type="checkbox" @bind="keepTrackFlag" />
        <label for="keepTrackFlag">Keep track of the changes and update?</label>
    </div>

    <div class="form-group checkbox-group">
        <input id="keepStructure" type="checkbox" @bind="keepStructure" />
        <label for="keepStructure">Keep the tree structure of the selected documents?</label>
    </div>

    <button class="next-button" @onclick="OnNextPhase">Create Backup</button>
     <button class="next-button" @onclick="OnCancel">Cancel</button>

</div>


@code {
    [Parameter] public required ProfileCreationService ProfileCreationService { get; set; }
    private string? profileName = null;
    private bool keepTrackFlag;
    private bool keepStructure;
    private bool isValidName = true;

    [Parameter] public EventCallback PhaseChanged { get; set; }

    private async Task OnNextPhase()
    {
        if (!ProfileCreationService.IsValidName(profileName)) {
            isValidName = false;
            return;
        }
        ProfileCreationService.SetSettings(profileName!, keepTrackFlag, keepStructure);
        ProfileCreationService.ChangeState();
        await PhaseChanged.InvokeAsync(); 
    }

    private async Task OnCancel() 
    {
        ProfileCreationService.Disable();
        await PhaseChanged.InvokeAsync();
    }

}

